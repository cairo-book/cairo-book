[[questions]]
type = "MultipleChoice"
prompt.prompt = "What is the primary benefit of using traits with generics in Cairo?"
prompt.distractors = [
    "To increase the execution speed of functions.",
    "To ensure that generic types conform to several/different behaviors.",
    "To reduce the gas cost of transactions on StarkNet.",
    "To automatically deploy smart contracts."
]
answer.answer = "To ensure that generic types conform to certain behaviors"
context = """
    Trait involves specifying a set of methods that can be implemented by a type, 
    similar to interfaces in other programming languages but with some differences.
    It abstracts common behaviors, Empowering types to customize implementations
"""

[[questions]]
type = "short_answer"
prompt.prompt = "What is the significance of using generics in the context of Starknet contracts, as mentioned?"
answer.answer = "To reduce code duplication but may increase contract size"

[[questions]]
type = "MultipleChoice"
prompt.prompt = "How can generics and traits together improve code quality in Cairo?"
prompt.distractors = [
    "Generics and traits have no impact on code quality.",
    "By eliminating the need for testing and verification of smart contracts.",
    "By automatically optimizing code for faster execution on the StarkNet.",
]
answer.answer = "By allowing for more concise and flexible code that can work with multiple types."
context = """
    Generics are abstract stand-ins for concrete types or other properties, 
    allowing for the creation of reusable code that can operate on many different types, 
    thus avoiding code duplication and enhancing code maintainability.
"""

[[questions]]
type = "MultipleChoice"
prompt.prompt = "How does the Cairo compiler handle generics at compile time?"
prompt.distractors = [
    "By dynamically typing all variables",
    "By encrypting the generic types",
    "By ignoring them for performance reasons",
    "By preventing any concrete type from replacing a generic type"
]
answer.answer = "By creating a new definition for each concrete type that replaces a generic type"
context = """
    Upon compilation, the compiler creates a new definition for each concrete type that replaces a generic type, 
    this reduces development time for the programmer, 
    but code duplication at compile level still exists
"""

[[questions]]
type = "MultipleChoice"
prompt.prompt = "What do generics in Cairo allow a programmer to do?"
prompt.distractors = [
    "Directly interact with the Cairo VM",
    "Increase the runtime speed of their programs",
    "Encrypt data using zero-knowledge proofs"
    "Ensure the use of only a specific data type"
]
answer.answer = "Replace specific types with placeholders to reduce code duplication"