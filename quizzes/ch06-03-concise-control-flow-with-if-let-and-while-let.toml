[[questions]]
id = "b2e05b2a-1f98-4498-9a9b-e1e358adf476"
type = "MultipleChoice"
prompt.prompt = """
Which control flow construct would be most idiomatic to use in the following function?

```
#[derive(Drop, Debug)]
enum Location {
    Point: u32,
    Range: (u32, u32),
}

fn print_range_max(loc: @Location) {
    // print the second field of Range, if loc is a Range
}
```
"""
answer.answer = "`if let`"
prompt.distractors = ["`match`"]
context = """
If the function only has an effect in one condition, an `if let` is most idiomatic.
"""

[[questions]]
id = "fe17286b-67ed-43a7-a1df-10afee7921cc"
type = "MultipleChoice"
prompt.prompt = """
Which control flow construct would be most idiomatic to use in the following function?

```
#[derive(Drop)]
enum Location {
    Point: u32,
    Range: (u32, u32),
}

fn get_start(loc: @Location) -> u32 {
    // return the first field of Range or the only field of Point
}
```
"""
answer.answer = "`match`"
prompt.distractors = ["`if let`"]
context = """
If the function needs to return a value for each condition, then a `match` is most appropriate.
"""
